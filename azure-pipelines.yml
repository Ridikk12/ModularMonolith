trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: Restore Nuget Packages
  inputs:
      command: 'restore'
      projects: "**/**.sln"
      workingDirectory: "$(System.DefaultWorkingDirectory)"
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: "**/**.sln"
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'Build'
- task: DotNetCoreCLI@2
  displayName: Run Tests
  inputs:
      command: 'test'
      projects:  "**/**.sln"
      publishTestResults: true
      arguments: '--logger trx /p:CollectCoverage=true "/p:CoverletOutputFormat=\"cobertura,opencover\"" /p:Exclude="[*Tests]*"'
- task: PublishCodeCoverageResults@1  
  displayName: 'Publish Code Coverage'  
  inputs:  
      codeCoverageTool: Cobertura  
      summaryFileLocation: '**/*coverage.cobertura.xml'
      additionalCodeCoverageFiles:   
- task: DotNetCoreCLI@2
  displayName: 'Publish Application'  
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'myWebsiteName'